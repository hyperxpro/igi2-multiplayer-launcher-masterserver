launcher.server.AEPEMAuthenticJoin.AEPEMAuthenticJoinerController -> launcher.server.AEPEMAuthenticJoin.AEPEMAuthenticJoinerController:
    java.util.List passwordStore -> passwordStore
    11:11:void <init>() -> <init>
    16:25:void addNewServer(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> addNewServer
    28:33:launcher.server.AEPEMAuthenticJoin.PasswordStore getServerByAddress(java.lang.String,java.lang.String) -> getServerByAddress
    37:42:launcher.server.AEPEMAuthenticJoin.PasswordStore getServerByAddressAndServerID(java.lang.String,java.lang.String,java.lang.String) -> getServerByAddressAndServerID
    46:58:boolean setNewPassword(java.lang.String,java.lang.String,java.lang.String) -> setNewPassword
    13:13:void <clinit>() -> <clinit>
launcher.server.AEPEMAuthenticJoin.PasswordStore -> launcher.server.AEPEMAuthenticJoin.PasswordStore:
    java.lang.String ServerIP -> a
    java.lang.String ServerPORT -> b
    java.lang.String ServerPASSWORD -> c
    boolean TakePassword -> d
    java.lang.String ServerID -> e
    15:21:void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String) -> <init>
    24:24:java.lang.String getServerID() -> getServerID
    28:28:boolean isTakePassword() -> isTakePassword
    32:33:void setTakePassword(boolean) -> setTakePassword
    36:36:java.lang.String getServerIPPORT() -> getServerIPPORT
    40:40:java.lang.String getServerIP() -> getServerIP
    44:44:java.lang.String getServerPORT() -> getServerPORT
    48:48:java.lang.String getServerPASSWORD() -> getServerPASSWORD
    52:53:void setServerPASSWORD(java.lang.String) -> setServerPASSWORD
launcher.server.AntiCheatVerifierController -> launcher.server.AntiCheatVerifierController:
    java.util.List antiCheat -> antiCheat
    11:11:void <init>() -> <init>
    25:30:launcher.server.processor.AntiCheatVerifier getPlayerByServerIPPORTName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getPlayerByServerIPPORTName
    43:44:void addPlayerAntiCheatVerifier(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> addPlayerAntiCheatVerifier
    55:62:void setPlayerAntiCheatVerified(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> setPlayerAntiCheatVerified
    74:82:boolean isPlayerVerified(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> isPlayerVerified
    13:13:void <clinit>() -> <clinit>
launcher.server.DataProcessor -> launcher.server.DataProcessor:
    java.lang.String PacketData -> a
    java.net.Socket socket -> b
    java.io.File MasterServerList -> c
    java.sql.Connection connection -> d
    java.sql.Statement statement -> e
    java.sql.ResultSet resultset -> f
    59:73:void <init>(java.lang.String,java.net.Socket) -> <init>
    87:730:java.lang.String Process() -> Process
    2080:2080:java.lang.String getPacketData():80:80 -> Process
    2080:2080:java.lang.String Process():88 -> Process
    2131:2131:boolean isEmailAddressValid(java.lang.String):1131:1131 -> Process
    2131:2131:java.lang.String Process():158 -> Process
    3076:3076:java.net.Socket getSocket():76:76 -> Process
    3076:3076:java.lang.String Process():186 -> Process
    4076:4076:java.net.Socket getSocket():76:76 -> Process
    4076:4076:java.lang.String Process():187 -> Process
    4104:4106:java.lang.String getUTCTime():1104:1106 -> Process
    4104:4106:java.lang.String Process():201 -> Process
    4750:4750:java.lang.String getRayID():750:750 -> Process
    4750:4750:java.lang.String Process():202 -> Process
    5750:5750:java.lang.String getRayID():750:750 -> Process
    5750:5750:java.lang.String Process():205 -> Process
    6734:6735:void addAccount(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):734:735 -> Process
    6734:6735:java.lang.String Process():210 -> Process
    6742:6743:void addWhois(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):742:743 -> Process
    6742:6743:java.lang.String Process():215 -> Process
    7076:7076:java.net.Socket getSocket():76:76 -> Process
    7076:7076:java.lang.String Process():220 -> Process
    8076:8076:java.net.Socket getSocket():76:76 -> Process
    8076:8076:java.lang.String Process():253 -> Process
    9076:9076:java.net.Socket getSocket():76:76 -> Process
    9076:9076:java.lang.String Process():255 -> Process
    10076:10076:java.net.Socket getSocket():76:76 -> Process
    10076:10076:java.lang.String Process():256 -> Process
    10738:10739:void updatePassword(java.lang.String,java.lang.String):738:739 -> Process
    10738:10739:java.lang.String Process():265 -> Process
    11076:11076:java.net.Socket getSocket():76:76 -> Process
    11076:11076:java.lang.String Process():267 -> Process
    12076:12076:java.net.Socket getSocket():76:76 -> Process
    12076:12076:java.lang.String Process():316 -> Process
    13076:13076:java.net.Socket getSocket():76:76 -> Process
    13076:13076:java.lang.String Process():320 -> Process
    14076:14076:java.net.Socket getSocket():76:76 -> Process
    14076:14076:java.lang.String Process():321 -> Process
    15076:15076:java.net.Socket getSocket():76:76 -> Process
    15076:15076:java.lang.String Process():347 -> Process
    16076:16076:java.net.Socket getSocket():76:76 -> Process
    16076:16076:java.lang.String Process():351 -> Process
    17076:17076:java.net.Socket getSocket():76:76 -> Process
    17076:17076:java.lang.String Process():352 -> Process
    18076:18076:java.net.Socket getSocket():76:76 -> Process
    18076:18076:java.lang.String Process():363 -> Process
    19076:19076:java.net.Socket getSocket():76:76 -> Process
    19076:19076:java.lang.String Process():392 -> Process
    20076:20076:java.net.Socket getSocket():76:76 -> Process
    20076:20076:java.lang.String Process():396 -> Process
    21076:21076:java.net.Socket getSocket():76:76 -> Process
    21076:21076:java.lang.String Process():426 -> Process
    22076:22076:java.net.Socket getSocket():76:76 -> Process
    22076:22076:java.lang.String Process():430 -> Process
    22746:22747:void addJoinerID(java.lang.String):746:747 -> Process
    22746:22747:java.lang.String Process():432 -> Process
    23076:23076:java.net.Socket getSocket():76:76 -> Process
    23076:23076:java.lang.String Process():436 -> Process
    24076:24076:java.net.Socket getSocket():76:76 -> Process
    24076:24076:java.lang.String Process():451 -> Process
    25076:25076:java.net.Socket getSocket():76:76 -> Process
    25076:25076:java.lang.String Process():469 -> Process
    26076:26076:java.net.Socket getSocket():76:76 -> Process
    26076:26076:java.lang.String Process():475 -> Process
    27076:27076:java.net.Socket getSocket():76:76 -> Process
    27076:27076:java.lang.String Process():502 -> Process
    28076:28076:java.net.Socket getSocket():76:76 -> Process
    28076:28076:java.lang.String Process():545 -> Process
    29076:29076:java.net.Socket getSocket():76:76 -> Process
    29076:29076:java.lang.String Process():579 -> Process
    30076:30076:java.net.Socket getSocket():76:76 -> Process
    30076:30076:java.lang.String Process():659 -> Process
    30080:30080:java.lang.String getPacketData():80:80 -> Process
    30080:30080:java.lang.String Process():701 -> Process
    755:772:boolean VerifyJoinerID(java.lang.String) -> a
    777:795:boolean Banner_MachineGUID(java.lang.String,java.lang.String) -> a
    31076:31076:java.net.Socket getSocket():76:76 -> a
    31076:31076:boolean Banner_MachineGUID(java.lang.String,java.lang.String):786 -> a
    800:818:boolean Banner_MotherboardUUID(java.lang.String,java.lang.String) -> b
    32076:32076:java.net.Socket getSocket():76:76 -> b
    32076:32076:boolean Banner_MotherboardUUID(java.lang.String,java.lang.String):809 -> b
    823:841:boolean Banner_HDD_SN(java.lang.String,java.lang.String) -> c
    33076:33076:java.net.Socket getSocket():76:76 -> c
    33076:33076:boolean Banner_HDD_SN(java.lang.String,java.lang.String):832 -> c
    846:863:java.lang.String AuthenticateUserViaEmail(java.lang.String) -> b
    868:885:java.lang.String AuthenticateUserViaUsername(java.lang.String) -> c
    890:907:boolean isEmailValid(java.lang.String) -> d
    912:929:java.lang.String getMultiplayerName(java.lang.String) -> e
    934:951:java.lang.String getMultiplayerName_Username(java.lang.String) -> f
    956:973:boolean isUsernameValid(java.lang.String) -> g
    978:995:boolean isMP_NameValid(java.lang.String) -> h
    1000:1017:java.lang.String WHOIS_MP_Name(java.lang.String) -> i
    1022:1044:java.lang.String getWHOIS(java.lang.String) -> j
    1049:1066:boolean isEmailFake(java.lang.String) -> k
    1072:1089:boolean isRayIDValid(java.lang.String) -> l
    1094:1101:void SQLQuery(java.lang.String) -> m
    1110:1112:java.lang.String getISTTime() -> a
    1116:1118:java.lang.String getISTTime$47921032() -> b
    1122:1127:java.lang.String generateEmailCode() -> c
    1136:1182:void echo(java.lang.String,int) -> a
    1186:1234:void echo_console(java.lang.String,int) -> echo_console
    1237:1254:void Log(java.lang.String) -> n
    1258:1274:java.lang.String FixExtraWhiteSpace(java.lang.String) -> o
    33282:33282:java.lang.String removeFirstSpace(java.lang.String):1282:1282 -> o
    33282:33282:java.lang.String FixExtraWhiteSpace(java.lang.String):1267 -> o
    34278:34278:java.lang.String removeLastSpace(java.lang.String):1278:1278 -> o
    34278:34278:java.lang.String FixExtraWhiteSpace(java.lang.String):1271 -> o
    60:60:void <clinit>() -> <clinit>
launcher.server.PlayerIPRecordController -> launcher.server.PlayerIPRecordController:
    java.util.List playerIPRecords -> playerIPRecords
    11:11:void <init>() -> <init>
    23:24:void addPlayerToIPRecord(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> addPlayerToIPRecord
    34:39:launcher.server.processor.PlayerIPRecord getPlayerIPByServerNameIPandPort(java.lang.String,java.lang.String,java.lang.String) -> getPlayerIPByServerNameIPandPort
    50:62:void removePlayerFromIPRecord(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> removePlayerFromIPRecord
    13:13:void <clinit>() -> <clinit>
launcher.server.ServerJoinController -> launcher.server.ServerJoinController:
    java.util.Queue PlayerQueueList -> PlayerQueueList
    java.util.Queue ServerQueueList -> ServerQueueList
    19:19:void <init>() -> <init>
    35:50:void addPlayer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> addPlayer
    59:65:void addServerQueue(java.lang.String,java.lang.String) -> addServerQueue
    75:80:java.lang.String getServerQueueNumber(java.lang.String,java.lang.String) -> getServerQueueNumber
    90:95:launcher.server.processor.QueueJoin getPlayerInformationByJoinerID(java.lang.String) -> getPlayerInformationByJoinerID
    102:105:void PrintAllPlayerQueueData() -> PrintAllPlayerQueueData
    118:166:void removePlayerByJoinerID(java.lang.String,java.lang.String,java.lang.String,int) -> removePlayerByJoinerID
    178:183:launcher.server.processor.QueueJoin getPlayerInformationByServerIP_PORT_MP_NAME(java.lang.String,java.lang.String,java.lang.String) -> getPlayerInformationByServerIP_PORT_MP_NAME
    193:198:void reducePlayerQueue(java.lang.String,java.lang.String) -> reducePlayerQueue
    21:22:void <clinit>() -> <clinit>
launcher.server.processor.AntiCheatVerifier -> launcher.server.processor.AntiCheatVerifier:
    java.lang.String PlayerName -> a
    java.lang.String ServerIP -> b
    java.lang.String ServerPORT -> c
    java.lang.String JoinerID -> d
    boolean Verified -> e
    15:21:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> <init>
    24:24:java.lang.String getServerIPPort() -> getServerIPPort
    28:28:java.lang.String getPlayerName() -> getPlayerName
    32:32:java.lang.String getServerIP() -> getServerIP
    36:36:java.lang.String getServerPORT() -> getServerPORT
    40:40:java.lang.String getJoinerID() -> getJoinerID
    44:44:boolean isVerified() -> isVerified
    48:49:void setVerified(boolean) -> setVerified
launcher.server.processor.BanFalseIP -> launcher.server.processor.BanFalseIP:
    java.lang.String IP -> a
    java.lang.String Data -> b
    18:21:void <init>(java.lang.String,java.lang.String) -> <init>
    28:63:void run() -> run
    66:66:java.lang.String getIP() -> getIP
    70:70:java.lang.String getData() -> getData
launcher.server.processor.EmailVerification -> launcher.server.processor.EmailVerification:
    long MailInnerTime -> a
    java.lang.String MailTime -> b
    java.lang.String Email -> c
    java.lang.String Code -> d
    java.lang.String IP -> e
    java.lang.String OSName -> f
    java.lang.String PCName -> g
    java.lang.String Name -> h
    30:38:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    40:47:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    51:69:void run() -> run
    1202:1203:void setEmailTime(java.lang.String):202:203 -> run
    1202:1203:void run():53 -> run
    1210:1211:void setMailTime(long):210:211 -> run
    1210:1211:void run():57 -> run
    2206:2206:long getInnerMailTime():206:206 -> run
    2206:2206:void run():64 -> run
    3206:3206:long getInnerMailTime():206:206 -> run
    3206:3206:void run():64 -> run
    4202:4203:void setEmailTime(java.lang.String):202:203 -> run
    4202:4203:void run():64 -> run
    76:121:void NewAccountVerification() -> NewAccountVerification
    125:171:void PasswordReset() -> PasswordReset
    174:174:java.lang.String getUserName() -> getUserName
    178:178:java.lang.String getIP() -> getIP
    182:182:java.lang.String getOSName() -> getOSName
    186:186:java.lang.String getPCName() -> getPCName
    190:190:java.lang.String getEmail() -> getEmail
    194:194:java.lang.String getCode() -> getCode
    198:198:java.lang.String getEmailTime() -> getEmailTime
launcher.server.processor.EmailVerification$1 -> launcher.server.processor.a:
    101:101:void <init>(launcher.server.processor.EmailVerification) -> <init>
    104:104:javax.mail.PasswordAuthentication getPasswordAuthentication() -> getPasswordAuthentication
launcher.server.processor.EmailVerification$2 -> launcher.server.processor.b:
    151:151:void <init>(launcher.server.processor.EmailVerification) -> <init>
    154:154:javax.mail.PasswordAuthentication getPasswordAuthentication() -> getPasswordAuthentication
launcher.server.processor.LauncherNewServer -> launcher.server.processor.LauncherNewServer:
    7:7:void <init>() -> <init>
    10:13:void main(java.lang.String[]) -> main
launcher.server.processor.MultiThreadedServer -> launcher.server.processor.MultiThreadedServer:
    int serverPort -> serverPort
    java.net.ServerSocket serverSocket -> serverSocket
    boolean isStopped -> isStopped
    java.lang.Thread runningThread -> runningThread
    10:16:void <init>(int) -> <init>
    21:49:void run() -> run
    1066:1070:void openServerSocket():66:70 -> run
    1066:1070:void run():25 -> run
    52:52:boolean isStopped() -> a
    56:62:void stop() -> stop
launcher.server.processor.NewAccountEmailVerificationController -> launcher.server.processor.NewAccountEmailVerificationController:
    java.util.List reset -> reset
    java.lang.String Name -> a
    java.lang.String Email -> b
    java.lang.String Code -> c
    java.lang.String IP -> d
    java.lang.String OSName -> e
    java.lang.String PCName -> f
    21:28:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    32:33:void run() -> run
    36:36:java.lang.String getUserName() -> getUserName
    40:40:java.lang.String getEmail() -> getEmail
    44:44:java.lang.String getCode() -> getCode
    48:48:java.lang.String getIP() -> getIP
    52:52:java.lang.String getOSName() -> getOSName
    56:56:java.lang.String getPCName() -> getPCName
    60:71:void removeEmail(java.lang.String) -> removeEmail
    74:79:launcher.server.processor.EmailVerification EmailStatus(java.lang.String) -> EmailStatus
    12:12:void <clinit>() -> <clinit>
launcher.server.processor.PasswordHash -> launcher.server.processor.PasswordHash:
    16:16:void <init>() -> <init>
    19:19:java.lang.String HashPassword(java.lang.String) -> HashPassword
    1046:1053:java.lang.String generateHash(java.lang.String):46:53 -> HashPassword
    1046:1053:java.lang.String HashPassword(java.lang.String):19 -> HashPassword
    1057:1060:java.lang.String getSalt():57:60 -> HashPassword
    1057:1060:java.lang.String generateHash(java.lang.String):48 -> HashPassword
    1057:1060:java.lang.String HashPassword(java.lang.String):19 -> HashPassword
    1094:1100:java.lang.String GetEncryptedHash(java.lang.String):94:100 -> HashPassword
    1094:1100:java.lang.String HashPassword(java.lang.String):19 -> HashPassword
    23:23:boolean isPasswordValid(java.lang.String,java.lang.String) -> isPasswordValid
    1114:1120:java.lang.String DecryptHash(java.lang.String):114:120 -> isPasswordValid
    1114:1120:boolean isPasswordValid(java.lang.String,java.lang.String):23 -> isPasswordValid
    27:42:boolean validatePassword(java.lang.String,java.lang.String) -> a
    64:70:java.lang.String toHex(byte[]) -> a
    75:79:byte[] fromHex(java.lang.String) -> a
    83:90:java.lang.String EncryptPass(java.lang.String) -> b
launcher.server.processor.PasswordResetEmailVerificationController -> launcher.server.processor.PasswordResetEmailVerificationController:
    java.lang.String Email -> a
    java.lang.String Code -> b
    java.lang.String IP -> c
    java.lang.String OSName -> d
    java.lang.String PCName -> e
    15:21:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    25:26:void run() -> run
    29:29:java.lang.String getEmail() -> getEmail
    33:33:java.lang.String getCode() -> getCode
    37:37:java.lang.String getIP() -> getIP
    41:41:java.lang.String getOSName() -> getOSName
    45:45:java.lang.String getPCName() -> getPCName
launcher.server.processor.PlayerIPRecord -> launcher.server.processor.PlayerIPRecord:
    java.lang.String PlayerName -> a
    java.lang.String PlayerIP -> b
    java.lang.String ServerIP -> c
    java.lang.String ServerPort -> d
    14:19:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    22:22:java.lang.String getServerIPPort() -> getServerIPPort
    26:26:java.lang.String getPlayerName() -> getPlayerName
    30:30:java.lang.String getPlayerIP() -> getPlayerIP
    34:34:java.lang.String getServerIP() -> getServerIP
    38:38:java.lang.String getServerPort() -> getServerPort
launcher.server.processor.QueueJoin -> launcher.server.processor.QueueJoin:
    java.lang.String PlayerName -> a
    java.lang.String IP -> b
    java.lang.String ServerIP -> c
    java.lang.String ServerPort -> d
    java.lang.String JoinerID -> e
    int ConnectionTimeout -> f
    int QueueNumber -> g
    19:28:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int) -> <init>
    34:44:void run() -> run
    49:49:java.lang.String getServerIPPORT() -> getServerIPPORT
    53:53:java.lang.String getQueueNumber() -> getQueueNumber
    57:60:void setQueueNumber(int) -> setQueueNumber
    63:63:java.lang.String getPlayerName() -> getPlayerName
    67:67:java.lang.String getIP() -> getIP
    71:71:java.lang.String getServerIP() -> getServerIP
    75:75:java.lang.String getServerPort() -> getServerPort
    79:79:java.lang.String getJoinerID() -> getJoinerID
    83:83:int getConnectionTimeout() -> getConnectionTimeout
    87:88:void setConnectionTimeout() -> setConnectionTimeout
    91:92:void resetConnectionTimeout(int) -> resetConnectionTimeout
launcher.server.processor.ServerListUpdate -> launcher.server.processor.ServerListUpdate:
    15:15:void <init>() -> <init>
    22:47:void run() -> run
launcher.server.processor.ServerQueue -> launcher.server.processor.ServerQueue:
    java.lang.String ServerIP -> a
    java.lang.String ServerPORT -> b
    int QueueNumber -> c
    13:17:void <init>(java.lang.String,java.lang.String,int) -> <init>
    20:20:java.lang.String getServerIPPORT() -> getServerIPPORT
    24:24:java.lang.String getServerIP() -> getServerIP
    28:28:java.lang.String getServerPORT() -> getServerPORT
    32:32:java.lang.String getQueueNumber() -> getQueueNumber
    36:37:void addQueueNumber(int) -> addQueueNumber
    40:43:void setQueueNumber(int) -> setQueueNumber
launcher.server.processor.WorkerRunnable -> launcher.server.processor.WorkerRunnable:
    java.net.Socket clientSocket -> clientSocket
    18:22:void <init>(java.net.Socket) -> <init>
    28:124:void run() -> run
